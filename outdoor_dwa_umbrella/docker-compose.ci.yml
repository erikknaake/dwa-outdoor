version: '3.8'

services:

  db:
    image: postgres:13.1-alpine
    restart: always
    environment:
      POSTGRES_DB: dwa_outdoor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432

  phoenix:
    image: erikknaake/dwa:phoenix-ci-${GITHUB_SHA}
    environment:
      PORT: 4000
      DATABASE_URL: ecto://postgres:postgres@db/dwa_outdoor
      SECRET_KEY_BASE: WnP6FgChxWpqluRF2I0ZE4idgnRlOPtbeuOwoNdR6pNWdUu3/pluNA6s/Kqw+CaW
      HOST: localhost
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_HOST: localhost
      MINIO_PORT: 9000
      TRAVEL_QUESTION_COOLDOWN: 5
      TRAVEL_QUESTION_SWEEPER_COOLDOWN: 15
    ports:
      - 4000:4000
    depends_on:
      - db
      - minio-loadbalancer

  minio1:
    image: minio/minio:RELEASE.2020-11-13T20-10-18Z
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...2}/data{1...2}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    image: minio/minio:RELEASE.2020-11-13T20-10-18Z
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...2}/data{1...2}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3


  minio-loadbalancer:
    image: nginx:1.19.2-alpine
    volumes:
      - ./minio/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
    depends_on:
      - minio1
      - minio2
    hostname: "minio"

  minio-create-bucket:
    image: erikknaake/dwa:create-bucket-ci-${GITHUB_SHA}
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_ADDRESS: "http://minio-loadbalancer:9000"
    depends_on:
      - minio-loadbalancer
    entrypoint: "/bin/sh create-bucket-entrypoint.sh"

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
